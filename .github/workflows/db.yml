name: DB

concurrency:
  group: db-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

on:
  workflow_call:
    inputs:
      DB_IMAGE:
        required: true
        type: string
jobs:
  build-images:
    name: 'üê∏ Build to JFrog'
    runs-on: ubuntu-latest
    #env:
      # Proxy settings for local development / testing
      #https_proxy: http://198.161.14.25:8080
      # no_proxy: ${{ env.OPENSHIFT_SERVER }}
    if: (github.ref_name == 'dev' || github.ref_name == 'test' || github.ref_name == 'prod')
    steps:
      - name: üì§ Checkout Target Branch
        uses: actions/checkout@v4
        with:
          ref: dev
          sparse-checkout: |
            config/mariadb
            example.env
            example.versions.env

      - name: Setup Env Vars
        id: dotenv
        uses: falti/dotenv-action@v1
        with:
          path: example.env
          export-variables: true
          keys-case: upper

      - name: Setup Env Version Vars
        id: dotenv_versions
        uses: falti/dotenv-action@v1
        with:
          path: example.versions.env
          export-variables: true
          keys-case: upper

      - name: Check Env Vars
        run: |
          echo Building and pushing DB_IMAGE: ${{ env.DB_IMAGE }}

      # Login to Artifactory
      - name: üîë Login to Artifactory
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ARTIFACTORY_URL }}
          username: ${{ secrets.ARTIFACTORY_USER }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: üõ†Ô∏è Pull latest DB base image then push to Artifactory
        run: |
          docker pull ${{ env.DB_IMAGE }}
          docker tag ${{ env.DB_IMAGE }} ${{ secrets.ARTIFACTORY_URL }}/${{ env.DB_IMAGE }}
          docker push ${{ secrets.ARTIFACTORY_URL }}/${{ env.DB_IMAGE }}
